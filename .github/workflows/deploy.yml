name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SERVER_SSH_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
    
    - name: Deploy to DigitalOcean
      env:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
      run: |
        ssh $USERNAME@$HOST << EOF
          set -x  # Enable verbose mode
          
          # Navigate to the project directory
          cd /root/Info
          
          # Pull the latest changes
          git pull origin main
          
          # Install backend dependencies
          pip install -r requirements.txt
          pip install flask gunicorn
          
          # Build frontend assets
          npm install
          npm run build
          
          # Check build output
          ls -l build/
          
          # Ensure the target directory exists
          sudo mkdir -p /var/www/myapp
          
          # Clear existing files in the target directory
          sudo rm -rf /var/www/myapp/*
          
          # Copy built frontend assets to the correct location
          sudo cp -rv build/* /var/www/myapp/
          
          # Update permissions
          sudo chown -R www-data:www-data /var/www/myapp
          sudo chmod -R 755 /var/www/myapp
          
          # Check copied files
          ls -l /var/www/myapp/
          
          # Update Nginx configuration
          sudo tee /etc/nginx/sites-available/myapp << EON
          server {
              listen 80;
              server_name www.instagraphix.pro;
              
              root /var/www/myapp;
              index index.html;
              
              location / {
                  try_files \$uri \$uri/ /index.html;
              }
              
              # Disable caching for testing
              add_header Cache-Control "no-store, no-cache, must-revalidate";
          }
          EON
          
          # Enable the new site configuration
          sudo ln -sf /etc/nginx/sites-available/myapp /etc/nginx/sites-enabled/
          sudo rm -f /etc/nginx/sites-enabled/default  # Remove default config if it exists
          
          # Test Nginx configuration
          sudo nginx -t
          
          # Restart Gunicorn (if you're using it)
          sudo systemctl restart gunicorn
          
          # Restart Nginx
          sudo systemctl restart nginx
          
          # Check Nginx status
          sudo systemctl status nginx
          
          echo "Deployment completed. Files copied to /var/www/myapp. Gunicorn and Nginx restarted."
        EOF